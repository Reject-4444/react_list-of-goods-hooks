{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","goods","prepearedGoods","sort","a","b","sortByAlpha","localeCompare","sortByLength","length","reverse","getPrepearedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAyBKA,E,0EApBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAUGD,K,oBAAAA,E,uBAAAA,M,KA4BE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA1BR,SAA2BC,EAA3B,GAA0E,IAA/BL,EAA8B,EAA9BA,UAAWE,EAAmB,EAAnBA,SAChDI,EAAc,YAAOD,GAmBzB,OAjBIL,GACFM,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQT,GACN,KAAKJ,EAASc,YACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,aACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKXX,IACFI,EAAiBA,EAAeQ,WAG3BR,EAMcS,CAAkBlB,EACrC,CAAEG,YAAWE,aAEf,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaL,EAASc,cACrCQ,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYnB,IAAcJ,EAASc,cAJzC,iCASA,wBACEO,QAAS,kBAAMhB,EAAaL,EAASgB,eACrCM,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYnB,IAAcJ,EAASgB,eAJzC,4BASA,wBACEK,QAAS,kBAAMd,GAAaD,IAC5BgB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAajB,IAHpD,sBAQEF,GAAaE,IACb,wBACEe,QAAS,WACPhB,EAAa,IACbE,GAAY,IAEde,KAAK,SACLF,UAAU,4BANZ,sBAcJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCtGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5425538b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Goods = Array<string>;\n\ninterface FnArg {\n  sortField: string;\n  reversed: boolean;\n}\n\nenum SortType {\n  sortByAlpha = 'alpha',\n  sortByLength = 'length',\n}\n\nfunction getPrepearedGoods(goods: Goods, { sortField, reversed }: FnArg) {\n  let prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SortType.sortByAlpha:\n          return a.localeCompare(b);\n        case SortType.sortByLength:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPrepearedGoods(goodsFromServer,\n    { sortField, reversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.sortByAlpha)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortType.sortByAlpha })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.sortByLength)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortType.sortByLength })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(!reversed)}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}